// This file is autogenerated. Do not modify
package controllers

import (
	"errors"
	"io/ioutil"
	"log"
	"net/http"

	gosnappi "github.com/open-traffic-generator/snappi/gosnappi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi/interfaces"
)

type statesController struct {
	handler interfaces.StatesHandler
}

func NewHttpStatesController(handler interfaces.StatesHandler) interfaces.StatesController {
	return &statesController{handler}
}

func (ctrl *statesController) Routes() []httpapi.Route {
	return []httpapi.Route{
		{Path: "/results/states", Method: "POST", Name: "GetStates", Handler: ctrl.GetStates},
	}
}

/*
GetStates: POST /results/states
Description:
*/
func (ctrl *statesController) GetStates(w http.ResponseWriter, r *http.Request) {
	var item gosnappi.StatesRequest
	if r.Body != nil {
		body, readError := ioutil.ReadAll(r.Body)
		if body != nil {
			item = NewApi().getApi().NewStatesRequest()
			err := item.FromJson(string(body))
			if err != nil {
				ctrl.responseGetStates400(w, err)
				return
			}
		} else {
			ctrl.responseGetStates400(w, readError)
			return
		}
	} else {
		bodyError := errors.New("Request do not have any body")
		ctrl.responseGetStates500(w, bodyError)
		return
	}
	result := ctrl.handler.GetStates(item, r)
	if result.HasStatusCode200() {
		if _, err := httpapi.WriteJSONResponse(w, 200, result.StatusCode200()); err != nil {
			log.Print(err.Error())
		}
		return
	}
	if result.HasStatusCode400() {
		if _, err := httpapi.WriteJSONResponse(w, 400, result.StatusCode400()); err != nil {
			log.Print(err.Error())
		}
		return
	}
	if result.HasStatusCode500() {
		if _, err := httpapi.WriteJSONResponse(w, 500, result.StatusCode500()); err != nil {
			log.Print(err.Error())
		}
		return
	}
	ctrl.responseGetStates500(w, errors.New("Unknown error"))
}

func (ctrl *statesController) responseGetStates400(w http.ResponseWriter, rsp_err error) {
	result := gosnappi.NewGetStatesResponse()
	result.StatusCode400().SetErrors([]string{rsp_err.Error()})
	if _, err := httpapi.WriteJSONResponse(w, 400, result.StatusCode400()); err != nil {
		log.Print(err.Error())
	}
}

func (ctrl *statesController) responseGetStates500(w http.ResponseWriter, rsp_err error) {
	result := gosnappi.NewGetStatesResponse()
	result.StatusCode500().SetErrors([]string{rsp_err.Error()})
	if _, err := httpapi.WriteJSONResponse(w, 500, result.StatusCode500()); err != nil {
		log.Print(err.Error())
	}
}
