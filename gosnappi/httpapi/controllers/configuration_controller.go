// This file is autogenerated. Do not modify
package controllers

import (
	"io/ioutil"
	"net/http"

	gosnappi "github.com/open-traffic-generator/snappi/gosnappi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi/interfaces"
)

type configurationController struct {
	handler interfaces.ConfigurationHandler
}

func NewHttpConfigurationController(handler interfaces.ConfigurationHandler) interfaces.ConfigurationController {
	return &configurationController{handler}
}

func (ctrl *configurationController) Routes() []httpapi.Route {
	return []httpapi.Route{
		{Path: "/config", Method: "POST", Name: "SetConfig", Handler: ctrl.SetConfig},
		{Path: "/config", Method: "GET", Name: "GetConfig", Handler: ctrl.GetConfig},
	}
}

/*
SetConfig: POST /config
Description: Sets configuration resources on the traffic generator.
*/
func (ctrl *configurationController) SetConfig(w http.ResponseWriter, r *http.Request) {
	var item gosnappi.Config
	if r.Body != nil {
		body, _ := ioutil.ReadAll(r.Body)
		if body != nil {
			item = gosnappi.NewConfig()
			err := item.FromJson(string(body))
			if err != nil {
				item = nil
			}
		}
	}
	result := ctrl.handler.SetConfig(item, r)
	if result.HasStatusCode200() {
		httpapi.WriteAnyResponse(w, 200, result.StatusCode200())
		return
	}
	if result.HasStatusCode400() {
		httpapi.WriteAnyResponse(w, 400, result.StatusCode400())
		return
	}
	if result.HasStatusCode500() {
		httpapi.WriteAnyResponse(w, 500, result.StatusCode500())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

/*
GetConfig: GET /config
Description:
*/
func (ctrl *configurationController) GetConfig(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.GetConfig(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	if result.HasStatusCode400() {
		httpapi.WriteAnyResponse(w, 400, result.StatusCode400())
		return
	}
	if result.HasStatusCode500() {
		httpapi.WriteAnyResponse(w, 500, result.StatusCode500())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}
