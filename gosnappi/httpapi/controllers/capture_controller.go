// This file is autogenerated. Do not modify
package controllers

import (
	"io/ioutil"
	"net/http"

	gosnappi "github.com/open-traffic-generator/snappi/gosnappi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi/interfaces"
)

type captureController struct {
	handler interfaces.CaptureHandler
}

func NewHttpCaptureController(handler interfaces.CaptureHandler) interfaces.CaptureController {
	return &captureController{handler}
}

func (ctrl *captureController) Routes() []httpapi.Route {
	return []httpapi.Route{
		{Path: "/results/capture", Method: "POST", Name: "GetCapture", Handler: ctrl.GetCapture},
	}
}

/*
GetCapture: POST /results/capture
Description:
*/
func (ctrl *captureController) GetCapture(w http.ResponseWriter, r *http.Request) {
	var item gosnappi.CaptureRequest
	if r.Body != nil {
		body, _ := ioutil.ReadAll(r.Body)
		if body != nil {
			item = gosnappi.NewCaptureRequest()
			err := item.FromJson(string(body))
			if err != nil {
				item = nil
			}
		}
	}
	result := ctrl.handler.GetCapture(item, r)
	if result.HasStatusCode200() {
		httpapi.WriteAnyResponse(w, 200, result.StatusCode200())
		return
	}
	if result.HasStatusCode400() {
		httpapi.WriteAnyResponse(w, 400, result.StatusCode400())
		return
	}
	if result.HasStatusCode500() {
		httpapi.WriteAnyResponse(w, 500, result.StatusCode500())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}
